{"version":3,"sources":["../src/SquareLoader.jsx"],"names":["keyframes","transform","animationName","propTypes","loading","bool","color","string","size","oneOfType","number","margin","ptKeys","Object","keys","SquareLoader","getDefaultProps","getSquareStyle","backgroundColor","props","width","height","verticalAlign","getAnimationStyle","animation","join","animationFillMode","perspective","getStyle","i","display","border","renderLoader","assign","klen","length"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;AAGA,IAAMA,YAAY;AACd,WAAO;AACHC,mBAAW;AADR,KADO;AAId,WAAO;AACHA,mBAAW;AADR,KAJO;AAOd,WAAO;AACHA,mBAAW;AADR,KAPO;AAUd,YAAQ;AACJA,mBAAW;AADP;AAVM,CAAlB;;AAeA;;;AAGA,IAAMC,gBAAgB,mCAAoBF,SAApB,CAAtB;;AAEA,IAAMG,YAAY;AACjBC,aAAS,oBAAUC,IADF;AAEjBC,WAAO,oBAAUC,MAFA;AAGjBC,UAAM,oBAAUC,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUH,MAA7B,CAApB,CAHW;AAIjBI,YAAQ,oBAAUF,SAAV,CAAoB,CAAC,oBAAUC,MAAX,EAAmB,oBAAUH,MAA7B,CAApB;AAJS,CAAlB;;AAOA,IAAMK,SAASC,OAAOC,IAAP,CAAYX,SAAZ,CAAf;;IAEqBY,Y;;;;;;;;;;;;;;sMASjBC,e,GAAkB;AAAA,mBAAO;AACrBZ,yBAAS,IADY;AAErBE,uBAAO,SAFc;AAGrBE,sBAAM;AAHe,aAAP;AAAA,S,QASlBS,c,GAAiB;AAAA,mBAAO;AACpBC,iCAAiB,MAAKC,KAAL,CAAWb,KADR;AAEpBc,uBAAO,MAAKD,KAAL,CAAWX,IAFE;AAGpBa,wBAAQ,MAAKF,KAAL,CAAWX,IAHC;AAIpBc,+BAAe,MAAKH,KAAL,CAAWG;AAJN,aAAP;AAAA,S,QAWjBC,iB,GAAoB,aAAK;AACrB,gBAAMC,YAAY,CAACtB,aAAD,EAAgB,IAAhB,EAAsB,IAAtB,EAA4B,UAA5B,EAAwC,8BAAxC,EAAwEuB,IAAxE,CAA6E,GAA7E,CAAlB;AACA,gBAAMC,oBAAoB,MAA1B;AACA,gBAAMC,cAAc,OAApB;;AAEA,mBAAO;AACHA,6BAAaA,WADV;AAEHH,2BAAWA,SAFR;AAGHE,mCAAmBA;AAHhB,aAAP;AAKH,S,QAMDE,Q,GAAW;AAAA,mBAAK,kCACZ,MAAKX,cAAL,CAAoBY,CAApB,CADY,EAEZ,MAAKN,iBAAL,CAAuBM,CAAvB,CAFY,EAGZ;AACIC,yBAAS,cADb;AAEIC,wBAAQ,uBAFZ,CAEoC;AAFpC,aAHY,CAAL;AAAA,S,QAaXC,Y,GAAe,mBAAW;AACtB,gBAAI5B,OAAJ,EAAa;AAClB,oBAAMe,QAAQN,OAAOoB,MAAP,CAAc,EAAd,EAAkB,MAAKd,KAAvB,CAAd;;AAEA,oBAAIhB,aAAaS,MAAjB,EAAyB;AACxB,wBAAMsB,OAAOtB,OAAOuB,MAApB;AACA,yBAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAIK,IAApB,EAA0BL,GAA1B,EAA+B;AAC9B,+BAAOV,MAAMP,OAAOiB,CAAP,CAAN,CAAP;AACA;AACD;;AAEQ,uBACR;AAAA;AAASV,yBAAT;AACgB,2DAAK,OAAO,MAAKS,QAAL,EAAZ;AADhB,iBADQ;AAKH;;AAED,mBAAO,IAAP;AACH,S;;AA5ED;;;;;AAKA;;;;;AASA;;;;;AAUA;;;;;;AAgBA;;;;;;AAaA;;;;;;;;iCAyBS;AACL,mBAAO,KAAKI,YAAL,CAAkB,KAAKb,KAAL,CAAWf,OAA7B,CAAP;AACH;;;;;;AAjFgBW,Y,CAIVZ,S,GAAYA,S;kBAJFY,Y","file":"SquareLoader.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport assign from 'domkit/appendVendorPrefix';\nimport insertKeyframesRule from 'domkit/insertKeyframesRule';\n\n/**\n * @type {Object}\n */\nconst keyframes = {\n    '25%': {\n        transform: 'rotateX(180deg) rotateY(0)'\n    },\n    '50%': {\n        transform: 'rotateX(180deg) rotateY(180deg)'\n    },\n    '75%': {\n        transform: 'rotateX(0) rotateY(180deg)'\n    },\n    '100%': {\n        transform: 'rotateX(0) rotateY(0)'\n    }\n};\n\n/**\n * @type {String}\n */\nconst animationName = insertKeyframesRule(keyframes);\n\nconst propTypes = {\n\tloading: PropTypes.bool,\n\tcolor: PropTypes.string,\n\tsize: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\tmargin: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n\nconst ptKeys = Object.keys(propTypes);\n\nexport default class SquareLoader extends Component {\n    /**\n     * @type {Object}\n     */\n    static propTypes = propTypes;\n\n    /**\n     * @return {Object}\n     */\n    getDefaultProps = () => ({\n        loading: true,\n        color: '#ffffff',\n        size: '50px'\n    })\n\n    /**\n     * @return {Object}\n     */\n    getSquareStyle = () => ({\n        backgroundColor: this.props.color,\n        width: this.props.size,\n        height: this.props.size,\n        verticalAlign: this.props.verticalAlign\n    })\n\n    /**\n     * @param  {Number} i\n     * @return {Object}\n     */\n    getAnimationStyle = i => {\n        const animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n        const animationFillMode = 'both';\n        const perspective = '100px';\n\n        return {\n            perspective: perspective,\n            animation: animation,\n            animationFillMode: animationFillMode\n        };\n    }\n\n    /**\n     * @param  {Number} i\n     * @return {Object}\n     */\n    getStyle = i => assign(\n        this.getSquareStyle(i),\n        this.getAnimationStyle(i),\n        {\n            display: 'inline-block',\n            border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }\n    )\n\n    /**\n     * @param  {Boolean} loading\n     * @return {ReactComponent || null}\n     */\n    renderLoader = loading => {\n        if (loading) {\n\t\t\tconst props = Object.assign({}, this.props);\n\n\t\t\tif (propTypes && ptKeys) {\n\t\t\t\tconst klen = ptKeys.length;\n\t\t\t\tfor (let i = 0; i < klen; i++) {\n\t\t\t\t\tdelete props[ptKeys[i]];\n\t\t\t\t}\n\t\t\t}\n\n            return (\n\t\t\t\t<div {...props}>\n                    <div style={this.getStyle()}></div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n\n    render() {\n        return this.renderLoader(this.props.loading);\n    }\n}\n"]}